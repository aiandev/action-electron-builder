{
  "name": "${name}",
  "productName": "${productName}",
  "brand": "${brand}",
  "version": "0.2.0",
  "homepage": "${homepage}",
  "author": {
    "name": "${author.name}",
    "email": "${author.email}",
    "url": "${author.url}"
  },
  "description": "${description}",
  "license": "${license}",
  "build": {
    "artifactName": "${build.artifactName}",
    "generateUpdatesFilesForAllChannels": true,
    "publish": {
      "provider": "s3",
      "bucket": "mypdc-dist-${env.ELECTRON_APP_STAGE}",
      "region": "us-east-1",
      "path": "${build.publish.path}",
      "channel": "latest",
      "acl": "public-read",
      "url": "https://mypdc-dist-${env.ELECTRON_APP_STAGE}.s3.amazonaws.com"
    },
    "dmg": {
      "sign": false
    },
    "appId": "${build.appId}",
    "mac": {
      "category": "public.app-category.business",
      "icon": "${build.mac.icon}",
      "extendInfo": {
        "NSUserNotificationAlertStyle": "alert"
      }
    },
    "protocols": {
      "name": "${build.protocols.name}",
      "schemes": [
        "${build.protocols.schemes.first}",
        "${build.protocols.schemes.second}",
        "${build.protocols.schemes.lastone}"
      ]
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "icon": "${build.linux.icon}"
    },
    "win": {
      "target": "nsis",
      "icon": "${build.win.icon}"
    },
    "squirrelWindows": {
      "iconUrl": "${build.squirrelWindows.icon}"
    },
    "nsis": {
      "oneClick": false,
      "perMachine": false
    }
  },
  "private": true,
  "main": "public/electron.js",
  "dependencies": {
    "@adampdc/react-scripts": "3.0.1-a03",
    "@material-ui/core": "^4.3.0",
    "@material-ui/lab": "^4.0.0-alpha.39",
    "api": "^0.1.0",
    "axios": "^0.19.0",
    "bootstrap": "^4.3.1",
    "browser-image-compression": "^1.0.6",
    "communicator": "0.1.0",
    "core-js": "^3.2.1",
    "electron-is-dev": "^1.0.1",
    "electron-log": "^4.2.2",
    "electron-notarize": "1.0.0",
    "electron-updater": "^4.3.1",
    "error-catcher": "^0.1.0",
    "es6-promise": "^4.2.8",
    "es6-template-strings": "^2.0.1",
    "font-awesome": "^4.7.0",
    "getstats": "1.2.0",
    "js-base64": "^2.5.2",
    "jspdf": "^1.5.3",
    "lerna": "^3.15.0",
    "login-redirector": "^0.1.0",
    "mic-recorder-to-mp3": "^2.2.2",
    "node-notifier": "^8.0.0",
    "pdf-lib": "^1.2.1",
    "react": "^16.8.6",
    "react-beautiful-dnd": "^11.0.5",
    "react-dom": "^16.8.6",
    "react-draggable": "^4.0.3",
    "react-mp3-recorder": "^1.1.2",
    "react-stripe-elements": "^6.0.1",
    "rollbar": "^2.19.0",
    "service-worker-utils": "^0.1.0",
    "sip.js": "^0.16.0",
    "whatwg-fetch": "^3.0.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "start-https": "HTTPS=true react-scripts start",
    "test": "yarn test-hl",
    "test-hl": "cd ../../tests/communicator/my.phone.com/ && ( pytest -rA --reruns 3 -n auto -s -v --html=../../artifacts/report.html --self-contained-html --metadata UI HL || true ) && (open ../../artifacts/report.html || xdg-open ../../artifacts/report.html || start ../../artifacts/report.html)",
    "test-ui": "cd ../../tests/communicator/my.phone.com/ && ( pytest -rA -s -v --html=../../artifacts/report.html --self-contained-html --metadata UI show || true ) && (open ../../artifacts/report.html || xdg-open ../../artifacts/report.html || start ../../artifacts/report.html)",
    "build-sw": "node ./src/sw-build.js",
    "clean-cra-sw": "rm -f build/precache-manifest.*.js && rm -f build/service-worker.js",
    "build": "react-scripts build && yarn run clean-cra-sw && yarn run build-sw",
    "eject": "react-scripts eject",
    "electron-dev": "concurrently \"BROWSER=none yarn start\" \"wait-on http://localhost:3000 && electron .\"",
    "pack": "electron-builder --dir",
    "dist": "electron-builder",
    "dist-all": "electron-builder -mwl",
    "build-mac": "export ELECTRON_APP_STAGE=stage && electron-builder -mwl",
    "test-old": "react-scripts test",
    "release-preprod": "export ELECTRON_APP_STAGE=stage && npm run publish",
    "release-prod": "export ELECTRON_APP_STAGE=prod && npm run publish",
    "publish": "electron-builder -m"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "sourceWorkspaces": [
    "pages/*",
    "apps/*",
    "functional-components/*"
  ],
  "devDependencies": {
    "concurrently": "^5.0.0",
    "electron": "7.1.2",
    "electron-builder": "^22.7.0",
    "typescript": "^3.7.2",
    "wait-on": "^3.3.0",
    "electron-is-dev": "^1.2.0"
  }
}
